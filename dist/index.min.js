"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}Object.defineProperty(exports,"__esModule",{value:!0});var s=t(require("p5"));class i{constructor(t,s){this.p=t,this.beds=s,this.patients=[]}add(t){this.patients.push(t)}discharge(t){this.patients.splice(t)}update(){this.p.fill(255),this.p.quad(this.p.width-100,50,this.p.width-50,50,this.p.width-50,51+21*this.beds,this.p.width-100,51+21*this.beds),this.patients.forEach(((t,s)=>{this.p.fill(255,0,0),this.p.ellipse(this.p.width-75,70+20*s,t.size,t.size)}))}}class h{constructor(t,s,i,h,e,o,a,n){this.p=t,this.x=s,this.y=i,this.size=10,this.born=n,this.active=!0,this.splashDistance=h,this.infectionRate=e,this.onsetPeriod=o,this.antibodyPeriod=a}update(t){t-this.born>100&&(this.active=!1),this.p.fill(255,200,200),this.p.ellipse(this.x,this.y,this.splashDistance,this.splashDistance),this.p.fill(255,0,0),this.p.ellipse(this.x,this.y,this.size,this.size)}}class e{constructor(t,s,i){this.p=t,this.x=s,this.y=i,this.status="ordinary",this.infected=null,this.age=0,this.move=3,this.size=10,this.col=this.p.color(255)}update(t,s,i,h){if(t.forEach((t=>{if("infected"===t.status){this.p.dist(t.x,t.y,this.x,this.y)<s.splashDistance&&"ordinary"===this.status&&(this.status="infected",this.infected=h)}})),null!==s){this.p.dist(s.x,s.y,this.x,this.y)<s.splashDistance&&"ordinary"===this.status&&(this.status="infected",this.infected=h)}"infected"===this.status&&(this.col=this.p.color(255,0,0),this.p.random(1)<s.infectionRate&&i&&i.patients.length<i.beds?(this.status="isolated",i.add(this)):this.p.random(1)<s.infectionRate&&(this.status="isolated")),"infected"!==this.status&&"isolated"!==this.status||h-this.infected>s.onsetPeriod&&(this.status="antibody",i&&i.patients.includes(this)&&i.discharge(this),this.col=this.p.color(66,135,245)),"antibody"===this.status&&h-this.infected-s.onsetPeriod>s.antibodyPeriod&&(this.status="ordinary",this.col=this.p.color(255)),this.x+=this.p.random(-this.move,this.move),this.y+=this.p.random(-this.move,this.move),this.x>this.p.width&&(this.x%=this.p.width),this.y>this.p.height&&(this.y%=this.p.height),this.x<0&&(this.x+=this.p.width),this.y<0&&(this.y+=this.p.height),i&&"isolated"===this.status||(this.p.fill(this.col),this.p.ellipse(this.x,this.y,this.size,this.size))}}exports.Pandemic=class{constructor(t,i={}){this.element=document.querySelector(t),this.opts=Object.assign(this.defaultOpts(),i),new s.default(this.sketch.bind(this),this.element)}defaultOpts(){return{n:800,beds:10,fps:60,splashDistance:30,infectionRate:.1,onsetPeriod:100,antibodyPeriod:200,play:!1,hospital:!1}}sketch(t){t.setup=()=>{t.createCanvas(this.element.offsetWidth,this.element.offsetHeight),t.frameRate(this.opts.fps),t.source=!1,t.humans=[],this.opts.hospital&&(t.hospital=new i(t,this.opts.beds));for(let s=0;s<this.opts.n;s++)t.humans.push(new e(t,t.random(t.width),t.random(t.height)))},t.draw=()=>{t.background(255),t.source&&t.source.active?t.source.update(t.frameCount):this.opts.play?t.mouseIsPressed&&(t.source=new h(t,t.mouseX,t.mouseY,this.opts.splashDistance,this.opts.infectionRate,this.opts.onsetPeriod,this.opts.antibodyPeriod,t.frameCount)):t.source=new h(t,t.random(t.width),t.random(t.height),this.opts.splashDistance,this.opts.infectionRate,this.opts.onsetPeriod,this.opts.antibodyPeriod,t.frameCount),t.humans.forEach((s=>s.update(t.humans,t.source,t.hospital,t.frameCount))),this.opts.hospital&&t.hospital.update()}}};
